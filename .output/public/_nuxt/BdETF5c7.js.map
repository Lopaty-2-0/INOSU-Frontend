{"version":3,"file":"BdETF5c7.js","sources":["../../../../components/manage/ProfilePicture.vue"],"sourcesContent":["<script setup lang=\"ts\">\r\nimport { ref, watch } from \"vue\";\r\nimport { useAlertsStore } from \"../../stores/alerts\";\r\n\r\nconst props = defineProps({\r\n  oldProfilePicture: {\r\n    type: String,\r\n    required: true,\r\n  },\r\n  reset: {\r\n    type: Boolean,\r\n    default: false,\r\n  },\r\n});\r\n\r\nconst emits = defineEmits([\"update\"]);\r\nconst profilePictureUrlImage = ref<string>(props.oldProfilePicture);\r\nconst fileInput = ref<null | HTMLInputElement>(null);\r\nconst profilePictureFile = ref<File | null>(null);\r\nconst urlInput = ref<string>(\"\");\r\nconst errors = ref<{ file: string; url: string }>({ file: \"\", url: \"\" });\r\n\r\nconst selectFile = (): void => {\r\n  if (fileInput.value) {\r\n    fileInput.value.click();\r\n  }\r\n};\r\n\r\nconst resetErrors = (): void => {\r\n  errors.value = { file: \"\", url: \"\" };\r\n};\r\n\r\nconst handleError = (message: string, type: string): void => {\r\n  switch (type) {\r\n    case \"file\":\r\n      errors.value.file = message;\r\n      break;\r\n    case \"url\":\r\n      errors.value.url = message;\r\n      break;\r\n  }\r\n\r\n  urlInput.value = \"\";\r\n  profilePictureUrlImage.value = props.oldProfilePicture;\r\n};\r\n\r\nconst convertFileToBase64 = async (file: File): Promise<string> => {\r\n  const validExtensions: string[] = [\"image/jpeg\", \"image/png\", \"image/gif\"];\r\n\r\n  if (!validExtensions.includes(file.type)) {\r\n    throw {\r\n      customMessage:\r\n        \"Nepodporovaný typ souboru. Povoleny jsou pouze jpg, png nebo gif.\",\r\n    };\r\n  }\r\n\r\n  return new Promise((resolve, reject) => {\r\n    const reader: FileReader = new FileReader();\r\n\r\n    reader.onload = () => resolve(reader.result as string);\r\n    reader.onerror = () => reject(\"Nepodařilo se přečíst soubor.\");\r\n    reader.readAsDataURL(file);\r\n  });\r\n};\r\n\r\nconst convertUrlToFile = async (url: string): Promise<File> => {\r\n  const response: Blob = await $fetch(url, { responseType: \"blob\" });\r\n  const filename: string = url.split(\"/\").pop() || \"image.png\";\r\n  const mimeType: string = response.type;\r\n  const allowedMimeTypes: string[] = [\"image/jpeg\", \"image/png\", \"image/gif\"];\r\n\r\n  if (!allowedMimeTypes.includes(mimeType)) {\r\n    throw {\r\n      customMessage:\r\n        \"Nepodporovaný typ souboru. Povoleny jsou pouze jpg, png nebo gif.\",\r\n    };\r\n  }\r\n\r\n  return new File([response], filename, { type: mimeType });\r\n};\r\n\r\nconst uploadFile = async (event: Event): Promise<void> => {\r\n  resetErrors();\r\n\r\n  const target: HTMLInputElement = event.target as HTMLInputElement;\r\n  const file: File | undefined = target.files?.[0];\r\n\r\n  if (!file) return;\r\n\r\n  if (file.size > 2097152) {\r\n    handleError(\"Obrázek je příliš velký, nahrajte prosím jiný.\", \"file\");\r\n    return;\r\n  }\r\n\r\n  try {\r\n    profilePictureFile.value = file;\r\n    profilePictureUrlImage.value = await convertFileToBase64(file);\r\n    urlInput.value = \"\";\r\n  } catch (error: any) {\r\n    handleError(error.customMessage || \"Nepodařilo se přečíst soubor.\", \"file\");\r\n  }\r\n};\r\n\r\nconst processUrlInput = async (url: string): Promise<void> => {\r\n  resetErrors();\r\n\r\n  try {\r\n    const file: File = await convertUrlToFile(url);\r\n\r\n    profilePictureUrlImage.value = await convertFileToBase64(file);\r\n    profilePictureFile.value = file;\r\n  } catch (error: any) {\r\n    handleError(\r\n      error.customMessage || \"Nepodařilo se načíst obrázek z URL adresy.\",\r\n      \"url\"\r\n    );\r\n  }\r\n};\r\n\r\nconst onUrlInput = async (): Promise<void> => {\r\n  if (!urlInput.value) {\r\n    resetErrors();\r\n    profilePictureUrlImage.value = props.oldProfilePicture;\r\n    return;\r\n  }\r\n\r\n  await processUrlInput(urlInput.value);\r\n};\r\n\r\nconst pasteUrl = async (): Promise<void> => {\r\n  try {\r\n    urlInput.value = await navigator.clipboard.readText();\r\n    await processUrlInput(urlInput.value);\r\n  } catch {\r\n    useAlertsStore().addAlert({\r\n      type: \"warning\",\r\n      title: \"Vložení URL\",\r\n      message: \"Váš prohlížeč nepodporuje vkládání.\",\r\n    });\r\n  }\r\n};\r\n\r\nwatch(\r\n  () => profilePictureUrlImage.value,\r\n  (): void => {\r\n    emits(\"update\", {\r\n      profilePicture:\r\n        props.oldProfilePicture !== profilePictureUrlImage.value\r\n          ? profilePictureFile.value\r\n          : undefined,\r\n    });\r\n  }\r\n);\r\n\r\nwatch(\r\n  () => props.reset,\r\n  (reset: boolean): void => {\r\n    if (reset) {\r\n      resetErrors();\r\n\r\n      profilePictureUrlImage.value = props.oldProfilePicture;\r\n      profilePictureFile.value = null;\r\n      urlInput.value = \"\";\r\n    }\r\n  }\r\n);\r\n</script>\r\n\r\n<template>\r\n  <div class=\"section\">\r\n    <slot />\r\n    <div class=\"items\">\r\n      <div class=\"section\">\r\n        <div class=\"content image\">\r\n          <img\r\n            loading=\"lazy\"\r\n            :src=\"profilePictureUrlImage\"\r\n            alt=\"Profile photo\"\r\n          />\r\n          <div\r\n            class=\"content upload-file\"\r\n            @click=\"selectFile\"\r\n            :class=\"{ error: errors.file }\"\r\n          >\r\n            <p v-if=\"errors.file\">\r\n              <Icon\r\n                class=\"icon\"\r\n                size=\"60px\"\r\n                name=\"material-symbols:error-rounded\"\r\n              />\r\n              {{ errors.file }}\r\n            </p>\r\n            <p v-else>\r\n              <Icon\r\n                class=\"icon\"\r\n                size=\"60px\"\r\n                name=\"material-symbols:cloud-upload\"\r\n              />\r\n              Klikni pro nahrání obrázku z počítače\r\n            </p>\r\n            <input\r\n              type=\"file\"\r\n              size=\"2097152\"\r\n              placeholder=\"Profile image file\"\r\n              ref=\"fileInput\"\r\n              @change=\"uploadFile($event)\"\r\n              accept=\".png,.jpg,.jpeg,.gif\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"section url\">\r\n        <div class=\"content\">\r\n          <label for=\"image\">URL obrázku</label>\r\n          <div class=\"line\">\r\n            <input\r\n              :class=\"{ error: errors.url }\"\r\n              type=\"text\"\r\n              id=\"image\"\r\n              name=\"image\"\r\n              placeholder=\"https://example.image/image.png\"\r\n              v-model=\"urlInput\"\r\n              @change=\"onUrlInput\"\r\n            />\r\n            <div class=\"icon-div\" @click=\"pasteUrl\">\r\n              <Icon\r\n                class=\"icon\"\r\n                size=\"16px\"\r\n                name=\"material-symbols:content-paste\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <p v-if=\"errors.url\" class=\"input-error\">{{ errors.url }}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped lang=\"scss\">\r\n.section {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 30px;\r\n  width: 100%;\r\n\r\n  .update {\r\n    color: rgba(var(--error-color), 1);\r\n  }\r\n\r\n  .line {\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: row;\r\n    gap: 10px;\r\n    flex-wrap: wrap;\r\n\r\n    input {\r\n      flex: 1;\r\n    }\r\n  }\r\n\r\n  .items {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 30px;\r\n    width: 100%;\r\n\r\n    .section {\r\n      display: flex;\r\n      flex-direction: row;\r\n      gap: 20px;\r\n      flex: 1;\r\n      align-items: flex-end;\r\n\r\n      &.url .icon-div {\r\n        padding: 15px;\r\n        border: var(--border-width) solid rgba(var(--border-color), 0.5);\r\n        color: var(--btn-2-color);\r\n        background: var(--btn-2-background);\r\n        border-radius: var(--normal-border-radius);\r\n        cursor: pointer;\r\n        transition: 0.2s;\r\n        line-height: 0;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n\r\n        .icon {\r\n          font-size: 16px;\r\n        }\r\n\r\n        &:hover {\r\n          background: var(--btn-2-hover-background);\r\n        }\r\n      }\r\n\r\n      .content {\r\n        width: 100%;\r\n        display: flex;\r\n        flex-direction: column;\r\n        gap: 10px;\r\n\r\n        &.image {\r\n          display: flex;\r\n          flex-direction: row;\r\n          gap: 30px;\r\n\r\n          img {\r\n            width: 300px;\r\n            height: 300px;\r\n            object-fit: cover;\r\n            border-radius: var(--normal-border-radius);\r\n          }\r\n\r\n          .upload-file {\r\n            display: flex;\r\n            justify-content: center;\r\n            align-items: center;\r\n            text-align: center;\r\n            width: 100%;\r\n            border: 2px dashed rgba(var(--border-color), 0.5);\r\n            background: var(--input-background);\r\n            border-radius: var(--normal-border-radius);\r\n            padding: 20px;\r\n            font-size: 16px;\r\n            transition: 0.2s;\r\n            color: var(--input-color);\r\n            cursor: pointer;\r\n\r\n            p {\r\n              display: flex;\r\n              justify-content: center;\r\n              align-items: center;\r\n              flex-direction: column;\r\n              font-size: 16px;\r\n              gap: 20px;\r\n              position: absolute;\r\n\r\n              .icon {\r\n                font-size: 60px;\r\n                border: none;\r\n              }\r\n            }\r\n\r\n            input {\r\n              height: 100%;\r\n              display: none;\r\n            }\r\n\r\n            &:hover {\r\n              background: var(--btn-2-hover-background);\r\n            }\r\n\r\n            &.error {\r\n              border-color: rgba(var(--error-color), 1);\r\n              color: rgba(var(--error-color), 1);\r\n            }\r\n          }\r\n        }\r\n\r\n        label {\r\n          color: var(--mini-title-color);\r\n          font-size: 16px;\r\n          font-weight: 500;\r\n          cursor: pointer;\r\n        }\r\n\r\n        .input-error {\r\n          font-size: 16px;\r\n          color: rgba(var(--error-color), 1);\r\n        }\r\n\r\n        input {\r\n          border-radius: var(--normal-border-radius);\r\n          font-size: 16px;\r\n          outline: none;\r\n          padding: 15px;\r\n          border: var(--border-width) solid rgba(var(--border-color), 0.5);\r\n          min-width: 150px;\r\n          background: var(--input-background);\r\n          color: var(--input-color);\r\n\r\n          &:focus {\r\n            border-color: rgba(var(--main-color), 1);\r\n          }\r\n\r\n          &.error {\r\n            border-color: rgba(var(--error-color), 1);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n@media (max-width: 994px) {\r\n  #settings .section .items .section .content.image {\r\n    .upload-file {\r\n      max-width: 100%;\r\n\r\n      span {\r\n        position: relative;\r\n        width: 100%;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n@media (max-width: 750px) {\r\n  .section .items .section .content.image {\r\n    .upload-file {\r\n      height: 150px;\r\n    }\r\n\r\n    img {\r\n      height: 150px;\r\n    }\r\n  }\r\n}\r\n\r\n@media (max-width: 503px) {\r\n  .section .items .section .content.image {\r\n    flex-direction: column;\r\n\r\n    .upload-file {\r\n      height: 150px;\r\n    }\r\n\r\n    img {\r\n      width: 100%;\r\n    }\r\n  }\r\n}\r\n</style>\r\n"],"names":["props","__props","emits","__emit","profilePictureUrlImage","ref","fileInput","profilePictureFile","urlInput","errors","selectFile","resetErrors","handleError","message","type","convertFileToBase64","file","resolve","reject","reader","convertUrlToFile","url","response","filename","mimeType","uploadFile","event","_a","error","processUrlInput","onUrlInput","pasteUrl","useAlertsStore","watch","reset"],"mappings":"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"}