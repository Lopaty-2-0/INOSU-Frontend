{"version":3,"file":"CHDESyX7.js","sources":["../../../../pages/panel/users/add.vue"],"sourcesContent":["<script lang=\"ts\" setup>\r\nimport EditFormFooter from \"~/components/manage/Footer.vue\";\r\nimport Alerts from \"~/components/Alerts.vue\";\r\nimport Navbar from \"~/components/Navbar.vue\";\r\nimport { ref, computed } from \"vue\";\r\nimport EditFullName from \"../../../components/manage/FullName.vue\";\r\nimport EditEmail from \"../../../components/manage/Email.vue\";\r\nimport EditPassword from \"../../../components/manage/Password.vue\";\r\nimport EditRole from \"../../../components/manage/Role.vue\";\r\nimport EditAbbreviation from \"../../../components/manage/Abbreviation.vue\";\r\nimport EditClass from \"../../../components/manage/Class.vue\";\r\nimport apiFetch from \"../../../componsables/apiFetch\";\r\nimport type {ClassData} from \"~/types/classes\";\r\nimport {useAlertsStore} from \"~/stores/alerts\";\r\n\r\ndefinePageMeta({\r\n  roles: [\"admin\"],\r\n});\r\n\r\nuseHead({\r\n  title: \"Panel | Uživatelé - Přidání\",\r\n  meta: [\r\n    { name: \"description\", content: \"Panel Settings User Information\" }\r\n  ],\r\n});\r\n\r\nconst alertsStore = useAlertsStore();\r\nconst submitLoading = ref<boolean>(false);\r\nconst triggerReset = ref<boolean>(false);\r\nconst allRoles = ref<string[] | undefined>(undefined);\r\nconst allClasses = ref<ClassData[] | undefined>(undefined);\r\n\r\nconst oldUserData = computed<{ name: string, surname: string, email: string, password: string, abbreviation: string, role: string, classes: number[]}>(() => ({\r\n  name: \"\",\r\n  surname: \"\",\r\n  email: \"\",\r\n  password: \"\",\r\n  abbreviation: \"\",\r\n  role: \"\",\r\n  classes: [],\r\n}));\r\n\r\nconst newUserData = ref<{ name: string | undefined, surname: string | undefined, email: string | undefined, password: string | undefined, abbreviation: string | undefined, role: string | undefined, classes: number[] | undefined}>({\r\n  name: undefined,\r\n  surname: undefined,\r\n  email: undefined,\r\n  password: undefined,\r\n  abbreviation: undefined,\r\n  role: undefined,\r\n  classes: undefined,\r\n});\r\nconst onFullNameUpdate = (fullName: { name: string | undefined, surname: string | undefined }): void => {\r\n  newUserData.value.name = fullName.name;\r\n  newUserData.value.surname = fullName.surname;\r\n};\r\n\r\nconst onEmailUpdate = (data: { email: string | undefined }): void => {\r\n  newUserData.value.email = data.email;\r\n};\r\n\r\nconst onPasswordUpdate = (data: { password: string | undefined }): void => {\r\n  newUserData.value.password = data.password;\r\n};\r\n\r\nconst onAbbreviationUpdate = (data: { abbreviation: string | undefined }): void => {\r\n  newUserData.value.abbreviation = data.abbreviation;\r\n};\r\n\r\nconst onRoleUpdate = (data: { role: string | undefined }): void => {\r\n  newUserData.value.role = data.role;\r\n};\r\n\r\nconst onClassUpdate = (data: { classes: number[] | undefined }): void => {\r\n  newUserData.value.classes = data.classes;\r\n};\r\n\r\nconst resetUserData = (): void => {\r\n  newUserData.value = {\r\n    name: undefined,\r\n    surname: undefined,\r\n    email: undefined,\r\n    password: undefined,\r\n    abbreviation: undefined,\r\n    role: undefined,\r\n    classes: undefined,\r\n  };\r\n\r\n  triggerReset.value = true;\r\n\r\n  setTimeout((): void => {\r\n    triggerReset.value = false;\r\n  }, 100);\r\n};\r\n\r\nconst createNewUser = async (): Promise<void> => {\r\n  if (!newUserData.value.name || !newUserData.value.surname || !newUserData.value.email || !newUserData.value.password || !newUserData.value.role) {\r\n    alertsStore.addAlert({ type: \"error\", title: \"Přidání uživatele\", message: \"Vyplňte všechna povinná pole.\" });\r\n    return;\r\n  }\r\n\r\n  submitLoading.value = true;\r\n\r\n  await apiFetch(\"/user/add\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: {\r\n      name: newUserData.value.name,\r\n      surname: newUserData.value.surname,\r\n      email: newUserData.value.email,\r\n      password: newUserData.value.password,\r\n      abbreviation: newUserData.value.abbreviation,\r\n      role: newUserData.value.role,\r\n      classes: newUserData.value.classes,\r\n    },\r\n    credentials: \"include\",\r\n    ignoreResponseError: true,\r\n    async onResponse({ response }) {\r\n      const resCode: string = response._data.resCode.toString();\r\n\r\n      switch (resCode) {\r\n        case \"1020\":\r\n          alertsStore.addAlert({ type: \"error\", title: \"Přidání uživatele\", message: \"Jméno nebylo zadáno.\" });\r\n          break;\r\n        case \"1030\":\r\n          alertsStore.addAlert({ type: \"error\", title: \"Přidání uživatele\", message: \"Jméno je příliš dlouhé.\" });\r\n          break;\r\n        case \"1040\":\r\n          alertsStore.addAlert({ type: \"error\", title: \"Přidání uživatele\", message: \"Příjmení nebylo zadáno.\" });\r\n          break;\r\n        case \"1050\":\r\n          alertsStore.addAlert({ type: \"error\", title: \"Přidání uživatele\", message: \"Příjmení je příliš dlouhé.\" });\r\n          break;\r\n        case \"1060\":\r\n          alertsStore.addAlert({ type: \"error\", title: \"Přidání uživatele\", message: \"Role nebyla zadána.\" });\r\n          break;\r\n        case \"1070\":\r\n          alertsStore.addAlert({ type: \"error\", title: \"Přidání uživatele\", message: \"Role je příliš dlouhá.\" });\r\n          break;\r\n        case \"1080\":\r\n          alertsStore.addAlert({ type: \"error\", title: \"Přidání uživatele\", message: \"Heslo nebylo zadáno.\" });\r\n          break;\r\n        case \"1090\":\r\n          alertsStore.addAlert({ type: \"error\", title: \"Přidání uživatele\", message: \"Heslo je příliš krátké.\" });\r\n          break;\r\n        case \"1100\":\r\n          alertsStore.addAlert({ type: \"error\", title: \"Přidání uživatele\", message: \"E-mail nebyl zadán.\" });\r\n          break;\r\n        case \"1110\":\r\n          alertsStore.addAlert({ type: \"error\", title: \"Přidání uživatele\", message: \"Špatný formát e-mailu.\" });\r\n          break;\r\n        case \"1120\":\r\n          alertsStore.addAlert({ type: \"error\", title: \"Přidání uživatele\", message: \"E-mail je příliš dlouhý.\" });\r\n          break;\r\n        case \"1130\":\r\n          alertsStore.addAlert({ type: \"error\", title: \"Přidání uživatele\", message: \"E-mail je již používán.\" });\r\n          break;\r\n        case \"1140\":\r\n          alertsStore.addAlert({ type: \"error\", title: \"Přidání uživatele\", message: \"Zkratka je již používána.\" });\r\n          break;\r\n        case \"1150\":\r\n          alertsStore.addAlert({ type: \"error\", title: \"Přidání uživatele\", message: \"Zkratka je příliš dlouhá.\" });\r\n          break;\r\n        case \"1161\":\r\n          alertsStore.addAlert({ type: \"success\", title: \"Přidání uživatele\", message: \"Uživatel byl úspěšně přidán.\" });\r\n          resetUserData();\r\n          break;\r\n        default:\r\n          alertsStore.addAlert({ type: \"error\", title: \"Přidání uživatele\", message: \"Nastala neznámá chyba.\" });\r\n          break;\r\n      }\r\n    },\r\n    async onRequestError() {\r\n      alertsStore.addAlert({ type: \"error\", title: \"Přidání uživatele\", message: \"Nastala neznámá chyba.\" });\r\n    },\r\n  }).finally((): void => {\r\n    submitLoading.value = false;\r\n  });\r\n};\r\n\r\nonMounted(async (): Promise<void> => {\r\n  await apiFetch(\"/user/get/roles\", {\r\n    method: \"get\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    credentials: \"include\",\r\n    ignoreResponseError: true,\r\n    onResponse({ response }) {\r\n      const roles: string[] = response._data.data.roles;\r\n\r\n      allRoles.value = roles || [];\r\n    },\r\n  });\r\n\r\n  await apiFetch(\"/class/get\", {\r\n    method: \"get\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    credentials: \"include\",\r\n    ignoreResponseError: true,\r\n    onResponse({ response }) {\r\n      const classes: ClassData[] = response._data.data.classes;\r\n\r\n      allClasses.value = classes || [];\r\n    },\r\n  });\r\n});\r\n</script>\r\n\r\n<template>\r\n  <NuxtLayout name=\"panel\" :loading=\"!allRoles || !allClasses\">\r\n    <template #header>\r\n      <Navbar :links=\"[\r\n        { name: 'Uživatelé', path: '/panel/users' },\r\n        { name: 'Přidání', path: '/panel/users/add' },\r\n      ]\" />\r\n    </template>\r\n\r\n    <template #content>\r\n      <div id=\"settings\">\r\n        <div class=\"content\">\r\n          <div class=\"line page-section\">\r\n            <EditFullName :old-full-name=\"{ name: oldUserData.name, surname: oldUserData.surname }\" :reset=\"triggerReset\" @update=\"onFullNameUpdate\">\r\n              <div class=\"section-head\">\r\n                <h3>Jméno a příjmení *</h3>\r\n                <p>Zadejte jméno a příjmení nového uživatele. Tato pole jsou povinná.</p>\r\n              </div>\r\n            </EditFullName>\r\n          </div>\r\n\r\n          <div class=\"line page-section\">\r\n            <EditEmail :old-email=\"oldUserData.email\" :reset=\"triggerReset\" @update=\"onEmailUpdate\">\r\n              <div class=\"section-head\">\r\n                <h3>E-mail * <span class=\"update\" v-show=\"newUserData.email\">(aktualizováno)</span></h3>\r\n                <p>Zadejte e-mailovou adresu nového uživatele. Toto pole je povinné a musí být ve správném formátu.</p>\r\n              </div>\r\n            </EditEmail>\r\n          </div>\r\n\r\n          <div class=\"line page-section\">\r\n            <EditPassword type=\"new\" :reset=\"triggerReset\" @update=\"onPasswordUpdate\">\r\n              <div class=\"section-head\">\r\n                <h3>Heslo k účtu * <span class=\"update\" v-show=\"newUserData.password\">(aktualizováno)</span></h3>\r\n                <p>Zadejte silné heslo pro nového uživatele. Heslo musí splňovat bezpečnostní požadavky a je povinné.</p>\r\n              </div>\r\n            </EditPassword>\r\n          </div>\r\n\r\n          <div class=\"line page-section\">\r\n            <EditRole :roles=\"allRoles || []\" :old-role=\"oldUserData.role\" :reset=\"triggerReset\" @update=\"onRoleUpdate\">\r\n              <div class=\"section-head\">\r\n                <h3>Role * <span class=\"update\" v-show=\"newUserData.role\">(aktualizováno)</span></h3>\r\n                <p>Vyberte roli, kterou má mít nový uživatel. Toto pole je povinné.</p>\r\n              </div>\r\n            </EditRole>\r\n          </div>\r\n\r\n          <div class=\"line page-section\">\r\n            <EditAbbreviation :full-name=\"{ name: newUserData.name, surname: newUserData.surname }\" :old-abbreviation=\"oldUserData.abbreviation\" :reset=\"triggerReset\" @update=\"onAbbreviationUpdate\">\r\n              <div class=\"section-head\">\r\n                <h3>Přezdívka <span class=\"update\" v-show=\"newUserData.abbreviation\">(aktualizováno)</span></h3>\r\n                <p>Zadejte přezdívku (zkratku) pro nového uživatele. Toto pole je volitelné, ale musí být jedinečné.</p>\r\n              </div>\r\n            </EditAbbreviation>\r\n          </div>\r\n\r\n          <div class=\"line page-section\">\r\n            <div class=\"section-head\">\r\n              <h3>Třídy <span class=\"update\" v-show=\"newUserData.classes\">(aktualizováno)</span></h3>\r\n              <p>Vyberte třídy, do kterých bude nový uživatel (student) zařazen. Toto pole je volitelné.</p>\r\n            </div>\r\n\r\n            <EditClass :old-class-ids=\"oldUserData.classes\" :classes=\"allClasses || []\" :reset=\"triggerReset\" @update=\"onClassUpdate\" v-if=\"newUserData.role === 'student'\" />\r\n            <p class=\"error\" v-else>\r\n              Třídy můžete vybírat pouze pokud role uživatele je <strong>student</strong>.\r\n            </p>\r\n          </div>\r\n\r\n          <EditFormFooter :is-loading=\"submitLoading\" :reset-function=\"resetUserData\" :submit-function=\"createNewUser\">\r\n            Pole označená * jsou povinná\r\n          </EditFormFooter>\r\n        </div>\r\n\r\n        <Alerts/>\r\n      </div>\r\n    </template>\r\n  </NuxtLayout>\r\n</template>\r\n\r\n<style scoped lang=\"scss\">\r\n#settings {\r\n  display: flex;\r\n  flex-direction: row;\r\n  gap: 30px;\r\n  position: relative;\r\n\r\n  .content {\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 35px;\r\n    position: relative;\r\n\r\n    .error {\r\n      color: rgba(var(--error-color), 1);\r\n      font-size: 16px;\r\n    }\r\n\r\n    .page-section {\r\n      border-bottom: 1px solid rgba(var(--border-color), 0.5);\r\n      padding-bottom: 35px;\r\n      display: flex;\r\n      flex-direction: column;\r\n      gap: 20px;\r\n    }\r\n\r\n    .section-head {\r\n      display: flex;\r\n      flex-direction: column;\r\n      gap: 10px;\r\n\r\n      h3 {\r\n        font-weight: 600;\r\n        font-size: 20px;\r\n        color: var(--title-color);\r\n      }\r\n\r\n      p {\r\n        color: rgba(var(--description-color), 1);\r\n        font-size: 16px;\r\n      }\r\n\r\n      .update {\r\n        color: rgba(var(--error-color), 1);\r\n      }\r\n    }\r\n\r\n    .password-rules {\r\n      display: flex;\r\n      flex-direction: column;\r\n      gap: 10px;\r\n\r\n      h4 {\r\n        font-weight: 600;\r\n        font-size: 16px;\r\n        color: var(--title-color);\r\n        margin-top: 10px;\r\n      }\r\n\r\n      ul {\r\n        list-style: none;\r\n\r\n        li {\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 10px;\r\n          font-size: 16px;\r\n          color: rgba(var(--description-color), 1);\r\n          margin-bottom: 10px;\r\n\r\n          .icon {\r\n            color: rgba(var(--main-color), 1);\r\n            line-height: 0;\r\n          }\r\n        }\r\n\r\n        p {\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 5px;\r\n\r\n          .icon {\r\n            padding-left: 5px;\r\n            color: rgba(var(--success-color), 1);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    ::v-deep(.reset-password) {\r\n      flex-direction: column;\r\n    }\r\n\r\n    ::v-deep(.section) {\r\n      width: 100%;\r\n    }\r\n  }\r\n}\r\n\r\n@media (max-width: 1055px) {\r\n  #settings {\r\n    flex-direction: column;\r\n    gap: 30px;\r\n  }\r\n}\r\n</style>\r\n"],"names":["useHead","alertsStore","useAlertsStore","submitLoading","ref","triggerReset","allRoles","allClasses","oldUserData","computed","newUserData","onFullNameUpdate","fullName","onEmailUpdate","data","onPasswordUpdate","onAbbreviationUpdate","onRoleUpdate","onClassUpdate","resetUserData","createNewUser","apiFetch","response","onMounted","roles","classes"],"mappings":"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"}